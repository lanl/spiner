###################
# Global Settings #
###################

stages:
  - build_n_test

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  SPINER_GCC_VERSION: "9.3.0"
  SPINER_CUDA_VERSION: "11.6.0"
  SPINER_SPACK_SPEC: "spiner@main+python%gcc@${SPINER_GCC_VERSION}"
  COLOR_CYAN: '\033[1;36m'
  COLOR_PLAIN: '\033[0m'
  # set to different spack upstream for testing
  SPINER_TEMP_SPACK_DIR: ""
  # uncomment for debugging the CI and persist the Spack installation
  # SPACK_USER_CACHE_PATH: "${CI_PROJECT_DIR}/spack-local"
  # DEVEL_SPACK_CHECKOUT: "${CI_PROJECT_DIR}/spack"

before_script:
  - export SPACK_DISABLE_LOCAL_CONFIG=true
  - export SPACK_USER_CACHE_PATH=${SPACK_USER_CACHE_PATH:-/tmp/spack-local}
  - export DEVEL_SPACK_CHECKOUT=${DEVEL_SPACK_CHECKOUT:-/tmp/spack}
  - export SPINER_SPACK_DIR=${SPINER_TEMP_SPACK_DIR:=$XCAP_OSS_SPACK_DIR}
  - echo -e "\e[0Ksection_start:`date +%s`:spack_init[collapsed=true]\r\e[0K${COLOR_CYAN}Creating Spack instance at ${DEVEL_SPACK_CHECKOUT}${COLOR_PLAIN}"
  - |
    rsync -rpl \
        --exclude=".git" \
        --exclude="etc/spack/repos.yaml" \
        --exclude="etc/spack/packages.yaml" \
        --include="etc/spack/**" \
        --include="lib/spack/**" \
        --exclude-from=${SPINER_SPACK_DIR}/.gitignore \
        ${SPINER_SPACK_DIR}/ ${DEVEL_SPACK_CHECKOUT}/
  - source ${DEVEL_SPACK_CHECKOUT}/share/spack/setup-env.sh
  - spack --version
  - spack compiler list
  - echo -e "\e[0Ksection_end:`date +%s`:spack_init\r\e[0K"

##########################
# Build Matrix Variables #
##########################

.buildtype_debug: &buildtype_debug
  BUILD_TYPE: "Debug"

.buildtype_release: &buildtype_release
  BUILD_TYPE: "Release"

.skylake: &skylake
    SCHEDULER_PARAMETERS: "--nodes=1 --partition=skylake-gold,skylake-platinum"

.power9: &power9
    SCHEDULER_PARAMETERS: "--nodes=1 --partition=power9"

#################
# General Setup #
#################

.job: &job_def
  tags:
    - darwin-slurm-shared
  variables:
    SCHEDULER_PARAMETERS: "--nodes=1 --partition=skylake-gold,skylake-platinum"
  only:
    refs:
      - merge_requests
      - pipelines
  except:
    refs:

#######################
# Job Script Template #
#######################

.test:
  stage: build_n_test
  extends:
    - .job
  script:
    - module load gcc/${SPINER_GCC_VERSION}
    - module load cuda/${SPINER_CUDA_VERSION}
    - |
      if [[ ${CI_JOB_NAME} =~ "power9" ]];
      then
        export SPINER_SPACK_SPEC="${SPINER_SPACK_SPEC}+kokkos+cuda cuda_arch=70";
      fi
    - |
      if [[ "${CI_COMMIT_BRANCH}" == "${CI_DEFAULT_BRANCH}" ]];
      then
        echo -e "\e[0Ksection_start:`date +%s`:spack_build[collapsed=true]\r\e[0K${COLOR_CYAN}Building via Spack${COLOR_PLAIN}"
        mkdir -p spack_build_env
        spack env create -d spack_build_env
        spack env activate -d spack_build_env
        spack repo add spack-repo
        spack repo list
        spack config add upstreams:default:install_tree:${SPINER_SPACK_DIR}/opt/spack/
        spack dev-build -j $(nproc) ${SPINER_SPACK_SPEC}
        spack env deactivate
        echo -e "\e[0Ksection_end:`date +%s`:spack_build\r\e[0K"
      fi
    - echo -e "\e[0Ksection_start:`date +%s`:spack_env[collapsed=true]\r\e[0K${COLOR_CYAN}Creating Spack environment${COLOR_PLAIN}"
    - mkdir -p spack_env
    - spack env create -d spack_env
    - spack env activate -d spack_env
    - spack repo add spack-repo
    - spack repo list
    - spack config add upstreams:default:install_tree:${SPINER_SPACK_DIR}/opt/spack/
    - spack spec -I ${SPINER_SPACK_SPEC}
    - spack add ${SPINER_SPACK_SPEC}
    - spack install -j $(nproc) --show-log-on-error --no-checksum --yes-to-all -u cmake
    - echo -e "\e[0Ksection_end:`date +%s`:spack_env\r\e[0K"
    - mkdir -p build
    - cd build
    - |
      cmake --log-level=DEBUG \
            -DBUILD_TESTING=ON \
            -DCMAKE_INSTALL_PREFIX=${CI_PROJECT_DIR}/install \
            -DSPINER_USE_HDF=ON \
            -DSPINER_TEST_USE_KOKKOS=$([[ ${CI_JOB_NAME} =~ "power9" ]] && echo ON || echo OFF) \
            -DSPINER_TEST_USE_KOKKOS_CUDA=$([[ ${CI_JOB_NAME} =~ "power9" ]] && echo ON || echo OFF) \
            -DCMAKE_CXX_COMPILER=$([[ ${CI_JOB_NAME} =~ "power9" ]] && echo nvcc_wrapper || g++) \
            ..
    - make -j $(nproc)
    - make install
    - make test
    - export CTEST_OUTPUT_ON_FAILURE=1
    - ctest --output-junit tests.xml
    - make convergence
  artifacts:
    paths:
      - build/tests.xml
    reports:
      junit: build/tests.xml

########
# Jobs #
########

gnu_skylake:
  <<: *job_def
  extends: .test
  variables:
    <<: *skylake

gnu_power9:
  <<: *job_def
  extends: .test
  variables:
    <<: *power9

